( self: Sentence null, father: null, left: null, right: null )
( self: Include null, father: Sentence, left: null, right: FunctionStatement )
( self: # null, father: Include, left: null, right: include )
( self: include null, father: Include, left: #, right: < )
( self: < null, father: Include, left: include, right: stdio.h )
( self: stdio.h null, father: Include, left: <, right: > )
( self: > null, father: Include, left: stdio.h, right: null )
( self: FunctionStatement null, father: Sentence, left: Include, right: null )
( self: Type null, father: FunctionStatement, left: null, right: FunctionName )
( self: int FIELD_TYPE, father: Type, left: null, right: null )
( self: FunctionName null, father: FunctionStatement, left: Type, right: StateParameterList )
( self: main IDENTIFIER, father: FunctionName, left: null, right: null )
( self: StateParameterList null, father: FunctionStatement, left: FunctionName, right: Sentence )
( self: Sentence null, father: FunctionStatement, left: StateParameterList, right: null )
( self: Statement null, father: Sentence, left: null, right: Statement )
( self: Type null, father: Statement, left: null, right: n )
( self: int FIELD_TYPE, father: Type, left: null, right: null )
( self: n IDENTIFIER, father: Statement, left: Type, right: null )
( self: Statement null, father: Sentence, left: Statement, right: Statement )
( self: Type null, father: Statement, left: null, right: i )
( self: int FIELD_TYPE, father: Type, left: null, right: null )
( self: i IDENTIFIER, father: Statement, left: Type, right: null )
( self: Statement null, father: Sentence, left: Statement, right: Statement )
( self: Type null, father: Statement, left: null, right: sum )
( self: int FIELD_TYPE, father: Type, left: null, right: null )
( self: sum IDENTIFIER, father: Statement, left: Type, right: null )
( self: Statement null, father: Sentence, left: Statement, right: FunctionCall )
( self: Type null, father: Statement, left: null, right: tmp )
( self: int FIELD_TYPE, father: Type, left: null, right: null )
( self: tmp IDENTIFIER, father: Statement, left: Type, right: null )
( self: FunctionCall null, father: Sentence, left: Statement, right: Assignment )
( self: scanf FUNCTION_NAME, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null, father: FunctionCall, left: scanf, right: null )
( self: %d STRING_CONSTANT, father: CallParameterList, left: null, right: & )
( self: & ADDRESS, father: CallParameterList, left: %d, right: n )
( self: n IDENTIFIER, father: CallParameterList, left: &, right: null )
( self: Assignment null, father: Sentence, left: FunctionCall, right: Control )
( self: sum IDENTIFIER, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand, father: Assignment, left: sum, right: null )
( self: Expression Constant, father: Expression, left: null, right: null )
( self: 0 _Constant, father: Expression, left: null, right: null )
( self: Control ForControl, father: Sentence, left: Assignment, right: FunctionCall )
( self: Assignment null, father: Control, left: null, right: Expression )
( self: i IDENTIFIER, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand, father: Assignment, left: i, right: null )
( self: Expression Constant, father: Expression, left: null, right: null )
( self: 1 _Constant, father: Expression, left: null, right: null )
( self: Expression SingleOrDoubleOperand, father: Control, left: Assignment, right: Sentence )
( self: Expression Variable, father: Expression, left: null, right: Expression )
( self: i _Variable, father: Expression, left: null, right: null )
( self: Expression Variable, father: Expression, left: Expression, right: Operator )
( self: n _Variable, father: Expression, left: null, right: null )
( self: Operator Operator, father: Expression, left: Expression, right: null )
( self: <= _Operator, father: Operator, left: null, right: null )
( self: Sentence null, father: Control, left: Expression, right: Expression )
( self: Assignment null, father: Sentence, left: null, right: Control )
( self: tmp IDENTIFIER, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand, father: Assignment, left: tmp, right: null )
( self: Expression Variable, father: Expression, left: null, right: Expression )
( self: i _Variable, father: Expression, left: null, right: null )
( self: Expression Constant, father: Expression, left: Expression, right: Operator )
( self: 2 _Constant, father: Expression, left: null, right: null )
( self: Operator Operator, father: Expression, left: Expression, right: null )
( self: % _Operator, father: Operator, left: null, right: null )
( self: Control IfElseControl, father: Sentence, left: Assignment, right: null )
( self: IfControl null, father: Control, left: null, right: ElseControl )
( self: Expression SingleOrDoubleOperand, father: IfControl, left: null, right: Sentence )
( self: Expression Variable, father: Expression, left: null, right: Expression )
( self: tmp _Variable, father: Expression, left: null, right: null )
( self: Expression Constant, father: Expression, left: Expression, right: Operator )
( self: 0 _Constant, father: Expression, left: null, right: null )
( self: Operator Operator, father: Expression, left: Expression, right: null )
( self: == _Operator, father: Operator, left: null, right: null )
( self: Sentence null, father: IfControl, left: Expression, right: null )
( self: Assignment null, father: Sentence, left: null, right: null )
( self: sum IDENTIFIER, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand, father: Assignment, left: sum, right: null )
( self: Expression Variable, father: Expression, left: null, right: Expression )
( self: sum _Variable, father: Expression, left: null, right: null )
( self: Expression Variable, father: Expression, left: Expression, right: Operator )
( self: i _Variable, father: Expression, left: null, right: null )
( self: Operator Operator, father: Expression, left: Expression, right: null )
( self: + _Operator, father: Operator, left: null, right: null )
( self: ElseControl null, father: Control, left: IfControl, right: null )
( self: Sentence null, father: ElseControl, left: null, right: null )
( self: Assignment null, father: Sentence, left: null, right: null )
( self: sum IDENTIFIER, father: Assignment, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand, father: Assignment, left: sum, right: null )
( self: Expression Variable, father: Expression, left: null, right: Expression )
( self: sum _Variable, father: Expression, left: null, right: null )
( self: Expression Variable, father: Expression, left: Expression, right: Expression )
( self: i _Variable, father: Expression, left: null, right: null )
( self: Expression Constant, father: Expression, left: Expression, right: Operator )
( self: 2 _Constant, father: Expression, left: null, right: null )
( self: Operator Operator, father: Expression, left: Expression, right: Operator )
( self: * _Operator, father: Operator, left: null, right: null )
( self: Operator Operator, father: Expression, left: Operator, right: null )
( self: - _Operator, father: Operator, left: null, right: null )
( self: Expression SingleOrDoubleOperand, father: Control, left: Sentence, right: null )
( self: Expression Variable, father: Expression, left: null, right: Operator )
( self: i _Variable, father: Expression, left: null, right: null )
( self: Operator Operator, father: Expression, left: Expression, right: null )
( self: ++ _Operator, father: Operator, left: null, right: null )
( self: FunctionCall null, father: Sentence, left: Control, right: Return )
( self: printf FUNCTION_NAME, father: FunctionCall, left: null, right: CallParameterList )
( self: CallParameterList null, father: FunctionCall, left: printf, right: null )
( self: sum is %d STRING_CONSTANT, father: CallParameterList, left: null, right: sum )
( self: sum IDENTIFIER, father: CallParameterList, left: sum is %d, right: null )
( self: Return null, father: Sentence, left: FunctionCall, right: null )
( self: return null, father: Return, left: null, right: Expression )
( self: Expression SingleOrDoubleOperand, father: Return, left: return, right: null )
( self: Expression Constant, father: Expression, left: null, right: null )
( self: 0 _Constant, father: Expression, left: null, right: null )
